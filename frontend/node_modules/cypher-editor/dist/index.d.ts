import * as React from 'react';
import * as CodeMirror from 'codemirror';
import 'codemirror/lib/codemirror.css';
import 'codemirror/theme/base16-dark.css';
import 'codemirror/theme/xq-dark.css';
import 'codemirror/theme/erlang-dark.css';
import 'codemirror/theme/eclipse.css';
import 'codemirror/theme/elegant.css';
import 'codemirror/theme/blackboard.css';
import 'codemirror/mode/cypher/cypher';
import 'codemirror/mode/sql/sql';
import 'codemirror/addon/dialog/dialog.css';
import 'codemirror/addon/search/searchcursor.js';
import 'codemirror/addon/dialog/dialog.js';
import 'codemirror/addon/fold/foldgutter.css';
import 'codemirror/addon/fold/foldcode.js';
import 'codemirror/addon/fold/foldgutter.js';
import 'codemirror/addon/fold/brace-fold.js';
import 'codemirror/addon/fold/comment-fold.js';
import 'codemirror/addon/display/fullscreen.css';
import 'codemirror/addon/display/fullscreen.js';
import 'codemirror/addon/scroll/simplescrollbars.css';
import 'codemirror/addon/scroll/simplescrollbars.js';
import 'codemirror/addon/hint/show-hint.css';
import 'codemirror/addon/hint/show-hint.js';
import 'codemirror/addon/hint/anyword-hint.js';
import 'codemirror/addon/edit/matchbrackets.js';
import 'codemirror/addon/edit/closebrackets.js';
import 'codemirror/addon/display/placeholder.js';
import { EditorConfig } from './type';
import './index.less';
interface State {
    codeMioorInstance: CodeMirror.EditorFromTextArea;
    editorValue: any;
}
interface Props {
    editorConfig: EditorConfig;
    initValue: string;
    getEditorValue: (value: any) => void;
}
declare class CodeEditor extends React.Component<Props, State> {
    constructor(props: Props);
    componentDidMount(): void;
    initCodeMioor(): void;
    updateEditorValue(): void;
    formatQuery(query: any): any;
    render(): JSX.Element;
}
export default CodeEditor;
