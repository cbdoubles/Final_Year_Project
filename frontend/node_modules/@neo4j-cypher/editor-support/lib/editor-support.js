"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "CypherEditorSupport", {
  enumerable: true,
  get: function () {
    return _CypherEditorSupport.CypherEditorSupport;
  }
});
Object.defineProperty(exports, "CypherKeywords", {
  enumerable: true,
  get: function () {
    return _CypherKeywords.default;
  }
});
exports.CypherTypes = void 0;
Object.defineProperty(exports, "ErrorListener", {
  enumerable: true,
  get: function () {
    return _ErrorListener.ErrorListener;
  }
});
Object.defineProperty(exports, "ReferencesProvider", {
  enumerable: true,
  get: function () {
    return _ReferencesProvider.ReferencesProvider;
  }
});
Object.defineProperty(exports, "TreeUtils", {
  enumerable: true,
  get: function () {
    return _TreeUtils.TreeUtils;
  }
});
Object.defineProperty(exports, "createCypherLexer", {
  enumerable: true,
  get: function () {
    return _createCypherLexer.createCypherLexer;
  }
});
Object.defineProperty(exports, "parse", {
  enumerable: true,
  get: function () {
    return _parse.parse;
  }
});
var _CypherEditorSupport = require("./CypherEditorSupport");
var _TreeUtils = require("./util/TreeUtils");
var _parse = require("./util/parse");
var CypherTypes = _interopRequireWildcard(require("./lang/CypherTypes"));
exports.CypherTypes = CypherTypes;
var _CypherKeywords = _interopRequireDefault(require("./lang/CypherKeywords"));
var _ReferencesProvider = require("./references/ReferencesProvider");
var _createCypherLexer = require("./util/createCypherLexer");
var _ErrorListener = require("./errors/ErrorListener");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }