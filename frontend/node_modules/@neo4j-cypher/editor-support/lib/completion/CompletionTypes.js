"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VARIABLE = exports.RELATIONSHIP_TYPE = exports.PROPERTY_KEY = exports.PROCEDURE_OUTPUT = exports.PROCEDURE_NAME = exports.PARAMETER = exports.NOOP = exports.LABEL = exports.KEYWORD = exports.FUNCTION_NAME = exports.CONSOLE_COMMAND_SUBCOMMAND = exports.CONSOLE_COMMAND_NAME = exports.ALL = void 0;
const KEYWORD = "keyword";
exports.KEYWORD = KEYWORD;
const LABEL = "label";
exports.LABEL = LABEL;
const VARIABLE = "variable";
exports.VARIABLE = VARIABLE;
const PARAMETER = "parameter";
exports.PARAMETER = PARAMETER;
const PROPERTY_KEY = "propertyKey";
exports.PROPERTY_KEY = PROPERTY_KEY;
const RELATIONSHIP_TYPE = "relationshipType";
exports.RELATIONSHIP_TYPE = RELATIONSHIP_TYPE;
const FUNCTION_NAME = "function";
exports.FUNCTION_NAME = FUNCTION_NAME;
const PROCEDURE_NAME = "procedure";
exports.PROCEDURE_NAME = PROCEDURE_NAME;
const CONSOLE_COMMAND_NAME = "consoleCommand";
exports.CONSOLE_COMMAND_NAME = CONSOLE_COMMAND_NAME;
const CONSOLE_COMMAND_SUBCOMMAND = "consoleCommandSubcommand";
exports.CONSOLE_COMMAND_SUBCOMMAND = CONSOLE_COMMAND_SUBCOMMAND;
const PROCEDURE_OUTPUT = "procedureOutput";

// Return no autocompletion
exports.PROCEDURE_OUTPUT = PROCEDURE_OUTPUT;
const NOOP = "noop";

// Default
exports.NOOP = NOOP;
const ALL = [VARIABLE, PARAMETER, PROPERTY_KEY, FUNCTION_NAME, KEYWORD].map(type => ({
  type
}));
exports.ALL = ALL;